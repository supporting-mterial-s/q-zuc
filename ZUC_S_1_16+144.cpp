#include<stdio.h>
#include<iostream>
#include <iomanip>
using namespace std;

uint8_t sbox[256] = {
     0x55,0xc2,0x63,0x71,0x3b,0xc8,0x47,0x86,0x9f,0x3c,0xda,0x5b,0x29,0xaa,0xfd,0x77,
     0x8c,0xc5,0x94,0x0c,0xa6,0x1a,0x13,0x00,0xe3,0xa8,0x16,0x72,0x40,0xf9,0xf8,0x42,
     0x44,0x26,0x68,0x96,0x81,0xd9,0x45,0x3e,0x10,0x76,0xc6,0xa7,0x8b,0x39,0x43,0xe1,
     0x3a,0xb5,0x56,0x2a,0xc0,0x6d,0xb3,0x05,0x22,0x66,0xbf,0xdc,0x0b,0xfa,0x62,0x48,
     0xdd,0x20,0x11,0x06,0x36,0xc9,0xc1,0xcf,0xf6,0x27,0x52,0xbb,0x69,0xf5,0xd4,0x87,
     0x7f,0x84,0x4c,0xd2,0x9c,0x57,0xa4,0xbc,0x4f,0x9a,0xdf,0xfe,0xd6,0x8d,0x7a,0xeb,
     0x2b,0x53,0xd8,0x5c,0xa1,0x14,0x17,0xfb,0x23,0xd5,0x7d,0x30,0x67,0x73,0x08,0x09,
     0xee,0xb7,0x70,0x3f,0x61,0xb2,0x19,0x8e,0x4e,0xe5,0x4b,0x93,0x8f,0x5d,0xdb,0xa9,
     0xad,0xf1,0xae,0x2e,0xcb,0x0d,0xfc,0xf4,0x2d,0x46,0x6e,0x1d,0x97,0xe8,0xd1,0xe9,
     0x4d,0x37,0xa5,0x75,0x5e,0x83,0x9e,0xab,0x82,0x9d,0xb9,0x1c,0xe0,0xcd,0x49,0x89,
     0x01,0xb6,0xbd,0x58,0x24,0xa2,0x5f,0x38,0x78,0x99,0x15,0x90,0x50,0xb8,0x95,0xe4,
     0xd0,0x91,0xc7,0xce,0xed,0x0f,0xb4,0x6f,0xa0,0xcc,0xf0,0x02,0x4a,0x79,0xc3,0xde,
     0xa3,0xef,0xea,0x51,0xe6,0x6b,0x18,0xec,0x1b,0x2c,0x80,0xf7,0x74,0xe7,0xff,0x21,
     0x5a,0x6a,0x54,0x1e,0x41,0x31,0x92,0x35,0xc4,0x33,0x07,0x0a,0xba,0x7e,0x0e,0x34,
     0x88,0xb1,0x98,0x7c,0xf3,0x3d,0x60,0x6c,0x7b,0xca,0xd3,0x1f,0x32,0x65,0x04,0x28,
     0x64,0xbe,0x85,0x9b,0x2f,0x59,0x8a,0xd7,0xb0,0x25,0xac,0xaf,0x12,0x03,0xe2,0xf2
};


void QAND(int a, int b, int &c, int d)
{
  // two ancilla qubits with value zero
  if((c != 0) || (d != 0))
  {
    cout<<"Error!"<<endl;
    exit(0);
  }
  c = a&b;
}

void QAND_C(int a, int b, int &c)
{
  //we just simulate the QAND_C gate as the function to reset c for short;
  c = c ^ a&b;
}

void ZUC_S_1_T_DEPTH3(int *in, int *S)
{
int tmp_1 = 0, tmp_2 = 0, tmp_3 = 0, tmp_4 = 0,  tmp_5 = 0,  tmp_6 = 0;
int tmp_7 = 0, tmp_8 = 0, tmp_9 = 0, tmp_10 = 0, tmp_11 = 0, tmp_12 = 0;
//#tmp_i = 12

int U_8 = 0, U_9 = 0, U_10 = 0, U_11 = 0, U_12 = 0, U_13 = 0, U_14 = 0, U_15 = 0, U_16 = 0, U_17 = 0;
//#U = 10

int W_1 = 0,  W_2 = 0,  W_3 = 0,  W_4 = 0,  W_5 = 0,  W_6 = 0,  W_7 = 0,  W_8 = 0,  W_9 = 0, W_10 = 0;
int W_11 = 0, W_12 = 0, W_13 = 0, W_14 = 0, W_15 = 0, W_16 = 0, W_17 = 0, W_18 = 0, W_19 = 0,W_20 = 0;
int W_21 = 0, W_22 = 0, W_23 = 0, W_24 = 0, W_25 = 0, W_26 = 0, W_27 = 0, W_28 = 0, W_29 = 0,W_30 = 0;
int W_31 = 0, W_32 = 0, W_33 = 0, W_34 = 0;
//#W = 34

int M_1 = 0,  M_2 = 0,  M_4 = 0,  M_6 = 0,  M_7 = 0,  M_9 = 0;
int M_11 = 0, M_12 = 0, M_14 = 0, M_25 = 0, M_28 = 0, M_29 = 0, M_31 = 0;
//#M = 13

int N_1 = 0,  N_3 = 0,  N_4 = 0,  N_5 = 0,  N_6 = 0,  N_7 = 0,  N_9 = 0,  N_10 = 0;
int N_11 = 0, N_12 = 0, N_13 = 0, N_14 = 0, N_16 = 0, N_17 = 0, N_18 = 0, N_19 = 0;
int N_22 = 0, N_23 = 0, N_24 = 0, N_25 = 0, N_26 = 0, N_27 = 0, N_28 = 0, N_29 = 0, N_30 = 0;
int N_31= 0,  N_32 = 0, N_33 = 0, N_34 = 0, N_35 = 0, N_36 = 0, N_37 = 0, N_38 = 0, N_39 = 0, N_40 = 0;
int N_41 = 0;
//#N = 36

int tmp_13 = 0, tmp_14 = 0, tmp_15 = 0, tmp_16 = 0, tmp_17 = 0, tmp_18 = 0, tmp_19 = 0, tmp_20 = 0, tmp_21 = 0, tmp_22 = 0;
int tmp_23 = 0, tmp_24 = 0, tmp_25 = 0, tmp_26 = 0, tmp_27 = 0, tmp_28 = 0, tmp_29 = 0, tmp_30 = 0, tmp_31 = 0, tmp_32 = 0;
int tmp_33 = 0, tmp_34 = 0, tmp_35 = 0, tmp_36 = 0, tmp_37 = 0, tmp_38 = 0, tmp_39 = 0, tmp_40 = 0, tmp_41 = 0, tmp_42 = 0;
int tmp_43 = 0, tmp_44 = 0, tmp_45 = 0, tmp_46 = 0, tmp_47 = 0, tmp_48 = 0, tmp_49 = 0, tmp_50 = 0, tmp_51 = 0;
//#added tmp_i = 39


in[0] = in[0] ^ in[5];
in[7] = in[7] ^ in[3];//    y[7]
in[2] = in[2] ^ in[1];
in[5] = in[5] ^ in[6];//    y[6]
in[6] = in[6] ^ in[3];
in[3] = in[3] ^ in[1]; //   y[1]
in[1] = in[1] ^ in[4];//    y[2]
in[2] = in[2] ^ in[0];//    y[4]
in[6] = in[6] ^ in[0];//    y[0]
in[0] = in[0] ^ in[3];//    y[3]
in[4] = in[4] ^ in[0];//    y[5]

//12 + 10 + 34 + 13 + 36 = 105
//added 39 ancilla qubits
//in total: 105+39 = 144 ancilla qubits(+ 8 inputs, 8 outputs)
//|x>|0>^8|0>144 -> |x>|S(x)>|0>144
in[2] = in[2] ^ in[5];
in[3] = in[3] ^ in[1];
in[1] = in[1] ^ in[4];
in[4] = in[4] ^ in[0];
U_17 = U_17 ^ in[7];   //y[17
U_14 = U_14 ^ in[6];
U_9 = U_9 ^ in[3];
U_8 = U_8 ^ in[4];//    y[3
U_16 = U_16 ^ in[1];
U_13 = U_13 ^ in[0];
in[0] = in[0] ^ in[6];//    y[0
U_10 = U_10 ^ in[4];
in[1] = in[1] ^ in[2];
U_11 = U_11 ^ in[1];//   y[10
U_16 = U_16 ^ in[0];//    y[16
in[4] = in[4] ^ in[0];//    y[1
in[2] = in[2] ^ in[0];//    y[4
in[1] = in[1] ^ in[3];//    y[9
in[6] = in[6] ^ in[5];//    y[2
U_15 = U_15 ^ in[4];//
in[3] = in[3] ^ in[7];//    y[6
U_12 = U_12 ^ in[7];//
U_10 = U_10 ^ in[6];//    y[8
in[7] = in[7] ^ in[2];//    y[5
U_9 = U_9 ^ in[2];//    y[7
in[5] = in[5] ^ in[3];//    y[14
U_13 = U_13 ^ in[3];//    y[12
U_12 = U_12 ^ in[1];//    y[11
U_14 = U_14 ^ in[3];//    y[13
U_15 = U_15 ^ in[5];//    y[15


/*
After this step,  
tmp: 1-2-3-4-5-6-7-8-9-10-11-12=0;
W  : 1 -2 -3 -4 -5 -6 -7 -8 -9 -10
     11-12-13-14-15-16-17-18-19-20
     21-22-23-24-25-26-27-28-29-30
     31-32-33-34=0;
M  : 1-2-4-6-7-9-11-12-14-25-28-29-31=0;
N  : 1-3-4-5-6-7-9-10
     11-12-13-14-16-17-18-19
     22-23-24-25-26-27-28-29-30
     31-32-33-34-35-36-37-38-39-40-41=0
---------------------------------------------------------
U  : 8-9-10-11-12-13-14-15-16-17!=0;
No. of qubits with state |0> is (12 + 34 + 13 + 36) = 95.
*/
               
//9 and gates: 9 Ms for outputs of QAND gates, 9 ancilla qubits (chosen from 95 ancilla qubits);                   
//#####Toffoli Layer 1####
M_1 = U_10 & in[2];
M_2 = U_15 & in[7];
M_4 = U_13 & U_17;
M_6 = in[6] & U_11;
M_7 = in[5] & in[3];
M_9 = U_14 & U_12;
M_11 = in[0] & in[1];
M_12 = U_8 & U_16;
M_14 = in[4] & U_9;

/*
After this step,  
tmp: 1-2-3-4-5-6-7-8-9-10-11-12=0;
W  : 1 -2 -3 -4 -5 -6 -7 -8 -9 -10
     11-12-13-14-15-16-17-18-19-20
     21-22-23-24-25-26-27-28-29-30
     31-32-33-34=0;
M  : 25-28-29-31=0;
N  : 1-3-4-5-6-7-9-10
     11-12-13-14-16-17-18-19
     22-23-24-25-26-27-28-29-30
     31-32-33-34-35-36-37-38-39-40-41=0
------------------------------------------------
U  : 8-9-10-11-12-13-14-15-16-17!=0;
M  : 1-2-4-6-7-9-11-12-14!=0;//outputs of the 1st T-depth
No. of qubits with state |0> is (12 + 34 + 4 + 36) = 86.
*/

//tmp: 1-2-3
M_7 = M_7 ^ M_12;
M_1 = M_1 ^ M_11;
M_6 = M_6 ^ M_11;
M_7 = M_7 ^ M_6;
M_2 = M_2 ^ M_12;
M_6 = M_6 ^ M_14;
M_2 = M_2 ^ M_1;       
M_1 = M_1 ^ M_14;
M_1 = M_1 ^ M_4;
M_6 = M_6 ^ M_9;
tmp_2 = tmp_2 ^ M_6;  
tmp_3 = tmp_3 ^ M_7;  
M_7 = M_7 ^ M_6 ;   
M_6 = M_6 ^ M_1;    
tmp_1 = tmp_1 ^ M_1;    
M_1 = M_1 ^ M_2;    


/*
After this step,  
tmp: 4-5-6-7-8-9-10-11-12=0;
W  : 1 -2 -3 -4 -5 -6 -7 -8 -9 -10
     11-12-13-14-15-16-17-18-19-20
     21-22-23-24-25-26-27-28-29-30
     31-32-33-34=0;
M  : 25-28-29-31=0;
N  : 1-3-4-5-6-7-9-10
     11-12-13-14-16-17-18-19
     22-23-24-25-26-27-28-29-30
     31-32-33-34-35-36-37-38-39-40-41=0
------------------------------------------------
U  : 8-9-10-11-12-13-14-15-16-17!=0;
M  : 1-2-4-6-7-9-11-12-14!=0;//outputs of the 1st T-depth
tmp: 1-2-3!=0;
No. of qubits with state |0> is (9 + 34 + 4 + 36) = 83.
*/
///////////////////////////////////recover U 

U_15 = U_15 ^ in[5]; //    y[15
U_14 = U_14 ^ in[3]; //    y[13
U_12 = U_12 ^ in[1]; //    y[11
U_13 = U_13 ^ in[3]; //    y[12
in[5]  = in[5] ^ in[3];  //    y[14
U_9  = U_9 ^ in[2];  //    y[7
in[7]  = in[7] ^ in[2];  //    y[5
U_10 = U_10 ^ in[6]; //    y[8
U_12 = U_12 ^ in[7];
in[3]  = in[3] ^ in[7];  //    y[6
U_15 = U_15 ^ in[4]; //
in[6]  = in[6] ^ in[5];  //    y[2
in[1]  = in[1] ^ in[3];  //    y[9
in[2]  = in[2] ^ in[0];  //    y[4
in[4]  = in[4] ^ in[0];  //    y[1
U_16 = U_16 ^ in[0]; //    y[16
U_11 = U_11 ^ in[1]; //   y[10
in[1]  = in[1] ^ in[2];
U_10 = U_10 ^ in[4];
in[0]  = in[0] ^ in[6];  //    y[0
U_13 = U_13 ^ in[0];
U_16 = U_16 ^ in[1];
U_8  = U_8 ^ in[4];  //    y[3
U_9  = U_9 ^ in[3];
U_14 = U_14 ^ in[6];
U_17 = U_17 ^ in[7]; //    y[17
in[4]  = in[4] ^ in[0];
in[1]  = in[1] ^ in[4];
in[3]  = in[3] ^ in[1];
in[2]  = in[2] ^ in[5];

//check U
//cout<<(U_8 + U_9+U_10 + U_11 + U_12 + U_13 + U_14 + U_15 + U_16 + U_17)<<" ";
/*
After this step,  
tmp: 4-5-6-7-8-9-10-11-12=0;
U  : 8-9-10-11-12-13-14-15-16-17=0;
W  : 1 -2 -3 -4 -5 -6 -7 -8 -9 -10
     11-12-13-14-15-16-17-18-19-20
     21-22-23-24-25-26-27-28-29-30
     31-32-33-34=0;
M  : 25-28-29-31=0;
N  : 1-3-4-5-6-7-9-10
     11-12-13-14-16-17-18-19
     22-23-24-25-26-27-28-29-30
     31-32-33-34-35-36-37-38-39-40-41=0
------------------------------------------------
M  : 1-2-4-6-7-9-11-12-14!=0;//outputs of the 1st T-depth
tmp: 1-2-3!=0;
No. of qubits with state |0> is (9 + 10 + 34 + 4 + 36) = 93.
*/

in[2] = in[2] ^ in[4];
in[3] = in[3] ^ in[6];
tmp_4 = tmp_4 ^ in[2];
in[6] = in[6] ^ in[1];//    y[5
in[3] = in[3] ^ in[0];//    y[6
in[2] = in[2] ^ in[5];
tmp_5 = tmp_5 ^ in[2];
in[2] = in[2] ^ in[6];//    y[3
tmp_4 = tmp_4 ^ in[6];//    y[2
tmp_6 = tmp_6 ^ in[3];
tmp_6 = tmp_6 ^ in[2];//    y[1
tmp_5 = tmp_5 ^ in[3];//    y[0

M_2 = M_2 ^ tmp_5; 
tmp_1 = tmp_1 ^ tmp_6; 
tmp_3 = tmp_3 ^ tmp_4; 
tmp_2 = tmp_2 ^ in[2]; 
M_7 = M_7 ^ in[5];
M_1 = M_1 ^ in[6]; 
M_6 = M_6 ^ in[3];

tmp_5 = tmp_5 ^ in[3];//    y[0
tmp_6 = tmp_6 ^ in[2];//    y[1
tmp_6 = tmp_6 ^ in[3];
tmp_4 = tmp_4 ^ in[6];//    y[2
in[2] = in[2] ^ in[6];//    y[3
tmp_5 = tmp_5 ^ in[2];
in[2] = in[2] ^ in[5];
in[3] = in[3] ^ in[0];//    y[6
in[6] = in[6] ^ in[1];//    y[5
tmp_4 = tmp_4 ^ in[2];
in[3] = in[3] ^ in[6];
in[2] = in[2] ^ in[4];
//cout<<(tmp_4+tmp_5+tmp_6);
//check U
//cout<<(U_8 + U_9+U_10 + U_11 + U_12 + U_13 + U_14 + U_15 + U_16 + U_17)<<" ";
/*
After this step,  
tmp: 4-5-6-7-8-9-10-11-12=0;
U  : 8-9-10-11-12-13-14-15-16-17=0;
W  : 1 -2 -3 -4 -5 -6 -7 -8 -9 -10
     11-12-13-14-15-16-17-18-19-20
     21-22-23-24-25-26-27-28-29-30
     31-32-33-34=0;
M  : 25-28-29-31=0;
N  : 1-3-4-5-6-7-9-10
     11-12-13-14-16-17-18-19
     22-23-24-25-26-27-28-29-30
     31-32-33-34-35-36-37-38-39-40-41=0
------------------------------------------------
M  : 1-2-4-6-7-9-11-12-14 !=0;
tmp: 1-2-3 !=0;
No. of qubits with state |0> is (9 + 10 + 34 + 4 + 36) = 93.
*/
////////////////////////////////////////////////////////////////////////   
     
//////计算T1------U7
in[2] = in[2] ^ in[5];
in[3] = in[3] ^ in[1];
in[1] = in[1] ^ in[4];
in[4] = in[4] ^ in[0];
U_17 = U_17 ^ in[7];    //y[17
U_14 = U_14 ^ in[6];
U_9 = U_9 ^ in[3];
U_8 = U_8 ^ in[4];//    y[3
U_16 = U_16 ^ in[1];
U_13 = U_13 ^ in[0];
in[0] = in[0] ^ in[6];//    y[0
U_10 = U_10 ^ in[4];
in[1] = in[1] ^ in[2];
U_11 = U_11 ^ in[1];//   y[10
U_16 = U_16 ^ in[0];//    y[16
in[4] = in[4] ^ in[0];//    y[1
in[2] = in[2] ^ in[0];//    y[4
in[1] = in[1] ^ in[3];//    y[9
in[6] = in[6] ^ in[5];//    y[2
U_15 = U_15 ^ in[4];//
in[3] = in[3] ^ in[7];//    y[6
U_12 = U_12 ^ in[7];//
U_10 = U_10 ^ in[6];//    y[8
in[7] = in[7] ^ in[2];//    y[5
U_9 = U_9 ^ in[2];//    y[7
in[5] = in[5] ^ in[3];//    y[14
U_13 = U_13 ^ in[3];//    y[12
U_12 = U_12 ^ in[1];//    y[11
U_14 = U_14 ^ in[3];//    y[13
U_15 = U_15 ^ in[5];//    y[15

/*
After this step,  
tmp: 4-5-6-7-8-9-10-11-12=0;
W  : 1 -2 -3 -4 -5 -6 -7 -8 -9 -10
     11-12-13-14-15-16-17-18-19-20
     21-22-23-24-25-26-27-28-29-30
     31-32-33-34=0;
M  : 25-28-29-31=0;
N  : 1-3-4-5-6-7-9-10
     11-12-13-14-16-17-18-19
     22-23-24-25-26-27-28-29-30
     31-32-33-34-35-36-37-38-39-40-41=0
------------------------------------------------
M  : 1-2-4-6-7-9-11-12-14!=0;
U  : 8-9-10-11-12-13-14-15-16-17 !=0;
tmp: 1-2-3 !=0;
No. of qubits with state |0> is (9 + 34 + 4 + 36) = 83.
*/
//33 and gates, 33 qubits for outputs, 33 ancialla qubits chosen from 83-33 ancilla qubits

//////////////////////////////////////////
/*
U        : 8-9-10-11-12-13-14-15-16-17
frequency  2-2-1 -1 -2 -2 -2 -1 -2 -2
in  : 0-1-2-3-4-5-6-7
      1-1-3-3-1-2-1-1
tmp : 1-2-3
      3-3-2   
M   : 1-2-6-7
      12-2-2-12
33 QAND gates:
        33 0s to save outputs;
        33 0s as ancilla qubits;
        66 inputs: 25 are allocated, 66-25 = 41 should be copied, 41 ancilla qubits required.
     33 + 33 + (66-25) = 107 ancilla qubits are required, 
     107 - 83 = 24 ancilla qubits (denoted by t_1~t_24)  should be introduced.
     after this step, reset 24 ancilla qubtis (t_1~t_24), i.e., 83 - 33 + 24 = 74 ancilla qubits with state 0 can be reused.
           
*/
M_25 = tmp_3 & M_2;
M_29 = M_2 & tmp_2;
M_31 = tmp_1 & tmp_3;
N_1 = M_7 & in[2];
N_4 = M_7 & in[7];
N_6 = M_7 & U_17;
N_7 = tmp_2 & U_17;
N_10 = M_1 & U_11;
N_11 = M_1 & in[3];
N_13 = tmp_1 & U_12;
N_14 = M_1 & U_12;
N_16 = M_1 & in[1];
N_17 = M_7 & in[1];
N_22 = M_1 & U_16;
N_23 = M_7 & U_16;
N_24 = M_1 & U_9;
N_25 = M_7 & U_9;
N_26 = M_7 & U_10;
N_27 = M_7 & U_15;
N_29 = M_7 & U_13;
N_30 = tmp_2 & U_13;
N_31 = M_1 & in[6];
N_32 = M_1 & in[5];
N_34 = tmp_1 & U_14;
N_35 = M_1 & U_14;
N_36 = M_1 & in[0];
N_37 = M_7 & in[0];
N_38 = M_1 & U_8;
N_39 = M_7 & U_8;
N_40 = M_1 & in[4];
N_41 = M_7 & in[4];
W_9 = M_6 & in[1];
W_26 = M_6 & in[0];



W_9 = W_9 ^ W_26;

S[0] = S[0] ^ W_9;
S[1] = S[1] ^ W_9;
S[2] = S[2] ^ W_9;
S[3] = S[3] ^ W_26;
S[4] = S[4] ^ W_26;
S[5] = S[5] ^ W_26;
S[6] = S[6] ^ W_26;
S[7] = S[7] ^ W_26;

//reset W_9, W_26
W_9 = W_9 ^ W_26;
W_9 = W_9 ^ M_6 & in[1];
W_26 = W_26 ^ M_6 & in[0];
//cout<<(W_9+W_26);
//////////////////////////////////
/*
reset:
tmp: 3
M  : 4-9-11-12-14
*/
//////////////////////////////////
/*
After this step,  
tmp: 4-5-6-7-8-9-10-11-12=0;
W  : 1 -2 -3 -4 -5 -6 -7 -8 - 9-10
     11-12-13-14-15-16-17-18-19-20
     21-22-23-24-25-26-27-28-29-30
     31-32-33-34=0;
M  : 28 = 0;
N  : 3-5-9-12-18-19-28-33=0
t  : 1~24=0
------------------------------------------------
M  : 1-2-4-6-7-9-11-12-14-25-29-31 !=0;
U  : 8-9-10-11-12-13-14-15-16-17 !=0;
tmp: 1-2-3 !=0;
N  : 1-4-6-7-10
     11-13-14-16-17
     22-23-24-25-26-27-29-30
     31-32-34-35-36-37-38-39-40-41 !=0
No. of qubits with state |0> is (9 + 34 + 1 + 8 + 24) = 76.
*/

/////如果，使用四个输出比特接收N7-13-30-34，可以节约4个qubits吗？
S[2] = S[2] ^ N_7           ^N_34;
S[4] = S[4] ^ N_7^N_13;
S[5] = S[5] ^ N_7^      N_30^N_34;
S[6] = S[6] ^      N_13;
S[7] = S[7] ^ N_7^N_13;

//reset N7，13,30，34
N_7  = N_7 ^ tmp_2 & U_17;
N_13 = N_13 ^ tmp_1 & U_12;
N_30 = N_30 ^ tmp_2 & U_13;
N_34 = N_34 ^ tmp_1 & U_14;
//cout<<(N_7+N_13+N_30+N_34);//后面可以re用起来；

/*
After this step,  
tmp: 4-5-6-7-8-9-10-11-12=0;
W  : 1 -2 -3 -4 -5 -6 -7 -8 -9 -10
     11-12-13-14-15-16-17-18-19-20
     21-22-23-24-25-26-27-28-29-30
     31-32-33-34=0;
M  : 28 = 0;
N  : 3-5-7-9-12-13-18-19-28-30-33-34=0
t  : 1~24=0
------------------------------------------------
M  : 1-2-4-6-7-9-11-12-14-25-29-31 !=0;
U  : 8-9-10-11-12-13-14-15-16-17 !=0;
tmp: 1-2-3 !=0;
N  : 1-4-6-10
     11-14-16-17
     22-23-24-25-26-27-29
     31-32-35-36-37-38-39-40-41 !=0
No. of qubits with state |0> is (9 + 34 + 1 + 12 + 24) = 80.
*/
///////////////////////////////////recover
U_15 = U_15 ^ in[5];//    y[15
U_14 = U_14 ^ in[3];//    y[13
U_12 = U_12 ^ in[1];//    y[11
U_13 = U_13 ^ in[3];//    y[12
in[5] = in[5] ^ in[3];//    y[14
U_9 = U_9 ^ in[2];//    y[7
in[7] = in[7] ^ in[2];//    y[5
U_10 = U_10 ^ in[6];//    y[8
U_12 = U_12 ^ in[7];//
in[3] = in[3] ^ in[7];//    y[6
U_15 = U_15 ^ in[4];//
in[6] = in[6] ^ in[5];//    y[2
in[1] = in[1] ^ in[3];//    y[9
in[2] = in[2] ^ in[0];//    y[4
in[4] = in[4] ^ in[0];//    y[1
U_16 = U_16 ^ in[0];//    y[16
U_11 = U_11 ^ in[1] ;//   y[10
in[1] = in[1] ^ in[2];
U_10 = U_10 ^ in[4];
in[0] = in[0] ^ in[6];//    y[0
U_13 = U_13 ^ in[0];
U_16 = U_16 ^ in[1];
U_8 = U_8 ^ in[4];//    y[3
U_9 = U_9 ^ in[3];
U_14 = U_14 ^ in[6];
U_17 = U_17 ^ in[7];    //y[17
in[4] = in[4] ^ in[0];
in[1] = in[1] ^ in[4];
in[3] = in[3] ^ in[1];
in[2] = in[2] ^ in[5];
//check U
//cout<<(U_8 + U_9+U_10 + U_11 + U_12 + U_13 + U_14 + U_15 + U_16 + U_17)<<" ";                
/*
After this step,  
tmp: 4-5-6-7-8-9-10-11-12=0;
U  : 8-9-10-11-12-13-14-15-16-17 =0;
W  : 1 -2 -3 -4 -5 -6 -7 -8 -9 -10
     11-12-13-14-15-16-17-18-19-20
     21-22-23-24-25-26-27-28-29-30
     31-32-33-34=0;
M  : 28 = 0;
N  : 3-5-7-9-12-13-18-19-28-30-33-34=0
t  : 1~24=0
------------------------------------------------
M  : 1-2-4-6-7-9-11-12-14-25-29-31 !=0;
tmp: 1-2-3 !=0;
N  : 1-4-6-10
     11-14-16-17
     22-23-24-25-26-27-29
     31-32-35-36-37-38-39-40-41 !=0
No. of qubits with state |0> is (9 + 10 + 34 + 1 + 12 + 24) = 90.
*/


tmp_7 = tmp_7 ^ M_29;
tmp_8 = tmp_8 ^ M_31;
tmp_2 = tmp_2 ^ M_25;
tmp_1 = tmp_1 ^ M_25;  //    y[0 =M26-tmp_1
M_29 = M_29 ^ tmp_2;//    y[10=N20-M_29
M_28 = M_28 ^ tmp_2;//    y[1 =M28-M_28
tmp_2 = tmp_2 ^ M_7; //    y[4 =N2 -tmp_2
M_31 = M_31 ^ tmp_1; //    y[11=N21-M_31
M_7 = M_7 ^ M_1;   
M_25 = M_25 ^ M_1; //    y[2=M30 -M_25
N_18 = N_18 ^ M_7; //    y[8=N18 -N_18
M_1 = M_1 ^ tmp_1;   //    y[6=N8  -M_1
N_19 = N_19 ^ M_7; //    y[9=N19 -N_19
M_7 = M_7 ^ M_25;  //    y[3=M32 -M_7
N_9 = N_9 ^ M_29;  //    y[7=N9  -N_9
N_3 = N_3 ^ M_31;  //    y[5=N3  -N_3
N_19 = N_19 ^ M_6;

/*
After this step,  
tmp: 4-5-6-9-10-11-12=0;
U  : 8-9-10-11-12-13-14-15-16-17 =0;
W  : 1 -2 -3 -4 -5 -6 -7 -8 -9-10
     11-12-13-14-15-16-17-18-19-20
     21-22-23-24-25-26-27-28-29-30
     31-32-33-34=0;
N  : 5-7-12-13-28-30-33-34=0
t  : 1~24=0
------------------------------------------------
M  : 1-2-4-6-7-9-11-12-14-25-28-29-31 !=0;
tmp: 1-2-3-7-8 !=0;
N  : 1-3-4-6-9-10
     11-14-16-17-18-19
     22-23-24-25-26-27-29
     31-32-35-36-37-38-39-40-41 !=0
No. of qubits with state |0> is (7 + 10 + 34 + 8 + 24) = 83.
*/


in[3] = in[3] ^ in[1];
in[4] = in[4] ^ in[6];    //y[0
tmp_11 = tmp_11 ^ in[4];
tmp_9 = tmp_9 ^ in[3];
in[2] = in[2] ^ in[0];
in[0] = in[0] ^ in[4];
in[1] = in[1] ^ in[0];
in[0] = in[0] ^ in[6] ;   //y[2
in[6] = in[6] ^ in[5] ;   //y[1
in[3] = in[3] ^ in[7] ;  // y[5
tmp_10 = tmp_10 ^ in[6];
tmp_10 = tmp_10 ^ in[0] ;   //y[7
in[2] = in[2] ^ in[6] ;   //y[3
tmp_12 = tmp_12 ^ in[1] ;  // y[11
in[5] = in[5] ^ in[3] ;  // y[9
in[1] = in[1] ^ in[2]  ; // y[8
tmp_11 = tmp_11 ^ in[5];  //  y[10
in[7] = in[7] ^ in[2] ; //  y[4
tmp_9 = tmp_9 ^ in[2]  ;//  y[6

/*
After this step,  
tmp: 4-5-6=0;
U  : 8-9-10-11-12-13-14-15-16-17 =0;
W  : 1 -2 -3 -4 -5 -6 -7 -8 -9-10
     11-12-13-14-15-16-17-18-19-20
     21-22-23-24-25-26-27-28-29-30
     31-32-33-34=0;
N  : 5-7-12-13-28-30-33-34=0
t  : 1~24=0
------------------------------------------------
M  : 1-2-4-6-7-9-11-12-14-25-28-29-31 !=0;
tmp: 1-2-3-7-8-9-10-11-12 !=0;
N  : 1-3-4-6-9-10
     11-14-16-17-18-19
     22-23-24-25-26-27-29
     31-32-35-36-37-38-39-40-41 !=0
No. of qubits with state |0> is (3 + 10 + 34 + 8 + 24) = 79.
*/
////////////////////////////////////////////////
//36 AND gates, 36 outputs, 36 ancilla qubits. Totally, 72 ancilla qubits are required.


/*
input variable: 50 variables involved
in :  0-1-2-3-4-5-6-7
N  :  1-3-4-6-9-10-11-14-16-17-18-19-22-23-24-25-26-27-29-31-32-35-36-37-38-39-40-41
M  :  1-7-25-28-29-31
tmp:  1-2-7-8-9-10-11-12

36 QAND gates:
    36 0s to store outputs;
    36 0s as ancilla qubits for QAND gates;
    36 qand gates, 36*2=72 inputs, 50 inputs have already allocated, i.e., 72-50=22 ancilla qubits needed to copy inputs;
    36+36+22= 94 ancilla qubits required, however, 79 0s can be used, i.e., 94-79=15 ancilla qubits should be introduced, denoted by t_25~t_39;
  


  Thus, except 105 variables defined in the very begining, 24+15=39 ancilla qubits (t_1~t_24, t_25~t_39) should be allocated.
  That is, 105+39= 144 ancilla qubits should be introduced.


*/

W_1 = N_3 & N_1;
W_2 = tmp_2 & in[2];
W_3 = N_4 & tmp_8;
W_4 = N_6 & tmp_1;
W_5 = M_1 & in[1] ;
W_6 = N_9 & N_10;
W_7 = tmp_7 & N_11;
W_8 = M_28 & N_14;
W_10 = N_16 & M_28;
W_11 = N_17 & tmp_1;
W_12 = N_19 & tmp_12;
W_13 = M_29 & N_22;
W_14 = M_31 & N_23;
W_15 = tmp_7 & N_24;
W_16 = N_18 & tmp_9;
W_17 = tmp_8 & N_25;
W_18 = N_3 & N_26;
W_19 = tmp_2 & tmp_10;
W_20 = N_27 & tmp_8;
W_21 = N_29 & tmp_1;
W_22 = M_1 & in[6];
W_23 = N_9 & N_31;
W_24 = tmp_7 & N_32;
W_25 = M_28 & N_35;
W_27 = N_36 & M_28;
W_28 = N_37 & tmp_1;
W_29 = N_19 & in[0];
W_30 = M_29 & N_38;
W_31 = M_31 & N_39;
W_32 = tmp_7 & N_40;
W_33 = N_18 & in[4];
W_34 = tmp_8 & N_41;
//如果是S盒的输出比特值为0，可以直接用N5, N12,28,33这四个变量作为S盒的输出，
//节约4个量子辅助比特（也要看上一层多的量子比特数量，如果上一层多了4个，
//这里可以直接用，那直接用4个S盒的输出比特作为BN没意义）。
N_5 = M_7 & in[7];
N_12 = M_25 & in[3];
N_28 = M_7 & tmp_11;
N_33 = M_25 & in[5];
/*
After this step,  
tmp: 4-5-6=0;
U  : 8-9-10-11-12-13-14-15-16-17 =0;
W  : 9-26=0;
N  : 7-13-30-34=0
t  : 1~39=0
------------------------------------------------
M  : 1-2-4-6-7-9-11-12-14-25-28-29-31 !=0;
tmp: 1-2-3-7-8-9-10-11-12 !=0;
N  : 1-3-4-5-6-9-10
     11-12-14-16-17-18-19
     22-23-24-25-26-27-28-29
     31-32-33-35-36-37-38-39-40-41 !=0
W  : 1 -2 -3 -4 -5 -6 -7 -8-10
     11-12-13-14-15-16-17-18-19-20
     21-22-23-24-25-27-28-29-30
     31-32-33-34=0;
No. of qubits with state |0> is (3 + 10 + 2 + 4 + 39) = 58.
*/


S[0] = S[0] ^      N_12^N_28;
S[1] = S[1] ^ N_5      ^N_28;
S[3] = S[3] ^ N_5^N_12^N_28;
S[4] = S[4] ^ N_5^N_12^N_28;
S[5] = S[5] ^      N_12^N_28;
S[6] = S[6] ^      N_12     ^N_33;
S[7] = S[7] ^                 N_33;

S[2] = S[2] ^ W_32 ^ W_33 ^ W_34;

W_1 = W_1 ^ W_2;
W_3 = W_3 ^ W_7;
W_5 = W_5 ^ W_6;
W_1 = W_1 ^ W_5;
W_5 = W_5 ^ W_11;
W_7 = W_7 ^ W_13;
W_24 = W_24 ^ W_20;
W_7 = W_7 ^ W_12;
W_7 = W_7 ^ W_14;
W_22 = W_22 ^ W_23;
W_18 = W_18 ^ W_19;
W_3 = W_3 ^ W_1;
W_1 = W_1 ^ W_4;
W_5 = W_5 ^ W_10;
W_5 = W_5 ^ W_7;
W_7 = W_7 ^ W_17;
W_18 = W_18 ^ W_22;
W_20 = W_20 ^ W_31;
W_20 = W_20 ^ W_29;
W_22 = W_22 ^ W_28;
W_22 = W_22 ^ W_27;
W_20 = W_20 ^ W_30;
W_7 = W_7 ^ W_16;
W_7 = W_7 ^ W_1;
W_18 = W_18 ^ W_3;
W_24 = W_24 ^ W_18;
W_18 = W_18 ^ W_20;
W_18 = W_18 ^ W_22;//    y[3]
W_7 = W_7 ^ W_15;
W_22 = W_22 ^ W_7;
W_22 = W_22 ^ W_25;
W_1 = W_1 ^ W_8;
W_20 = W_20 ^ W_21;
W_20 = W_20 ^ W_22 ;  // y[5]
W_22 = W_22 ^ W_5 ;  // y[2]
W_1 = W_1 ^ W_18  ; // y[4]
W_5 = W_5 ^ W_18  ; // y[1]
W_3 = W_3 ^ W_5   ; //y[0]
W_24 = W_24 ^ W_1 ;  // y[7]
W_7 = W_7 ^ W_24 ;//   y[6]
S[0] = S[0] ^ W_3;
S[1] = S[1] ^ W_5;
S[2] = S[2] ^ W_22;
S[3] = S[3] ^ W_18;
S[4] = S[4] ^ W_1;
S[5] = S[5] ^ W_20;
S[6] = S[6] ^ W_7;
S[7] = S[7] ^ W_24;


S[0] = S[0] ^ S[3];
S[3] = S[3] ^ S[4];
S[7] = S[7] ^ S[0];
S[3] = S[3] ^ S[6];//    y[6]
S[6] = S[6] ^ S[2];
S[4] = S[4] ^ S[7];//    y[5]
S[1] = S[1] ^ S[5];
S[5] = S[5] ^ S[3]; //   y[2]
S[1] = S[1] ^ S[0];//    y[1]
S[2] = S[2] ^ S[3];//    y[0]
S[0] = S[0] ^ S[6];//    y[4]
S[6] = S[6] ^ S[5]; //   y[7]
S[7] = S[7] ^ S[6]; //   y[3]

S[1] = S[1] ^ 1;
S[7] = S[7] ^ 1;
S[4] = S[4] ^ 1;
S[6] = S[6] ^ 1;
/////////////////////////////////////////////////////resetting all ancilla qubits
W_7 = W_7 ^ W_24 ;//   y[6]
W_24 = W_24 ^ W_1 ;  // y[7]
W_3 = W_3 ^ W_5   ; //y[0]
W_5 = W_5 ^ W_18  ; // y[1]
W_1 = W_1 ^ W_18  ; // y[4]
W_22 = W_22 ^ W_5 ;  // y[2]
W_20 = W_20 ^ W_22 ;  // y[5]
W_20 = W_20 ^ W_21;
W_1 = W_1 ^ W_8;
W_22 = W_22 ^ W_25;
W_22 = W_22 ^ W_7;
W_7 = W_7 ^ W_15;
W_18 = W_18 ^ W_22;//    y[3]
W_18 = W_18 ^ W_20;
W_24 = W_24 ^ W_18;
W_18 = W_18 ^ W_3;
W_7 = W_7 ^ W_1;
W_7 = W_7 ^ W_16;
W_20 = W_20 ^ W_30;
W_22 = W_22 ^ W_27;
W_22 = W_22 ^ W_28;
W_20 = W_20 ^ W_29;
W_20 = W_20 ^ W_31;
W_18 = W_18 ^ W_22;
W_7 = W_7 ^ W_17;
W_5 = W_5 ^ W_7;
W_5 = W_5 ^ W_10;
W_1 = W_1 ^ W_4;
W_3 = W_3 ^ W_1;
W_18 = W_18 ^ W_19;
W_22 = W_22 ^ W_23;
W_7 = W_7 ^ W_14;
W_7 = W_7 ^ W_12;
W_24 = W_24 ^ W_20;
W_7 = W_7 ^ W_13;
W_5 = W_5 ^ W_11;
W_1 = W_1 ^ W_5;
W_5 = W_5 ^ W_6;
W_3 = W_3 ^ W_7;
W_1 = W_1 ^ W_2;
N_33 = N_33^M_25 & in[5];
N_28 = N_28^M_7 & tmp_11;
N_12 = N_12^M_25 & in[3];
N_5 = N_5^M_7 & in[7];
W_34 = W_34^tmp_8 & N_41;
W_33 = W_33^N_18 & in[4];
W_32 = W_32^tmp_7 & N_40;
W_31 = W_31^M_31 & N_39;
W_30 = W_30^M_29 & N_38;
W_29 = W_29^N_19 & in[0];
W_28 = W_28^N_37 & tmp_1;
W_27 = W_27^N_36 & M_28;
W_25 = W_25^M_28 & N_35;
W_24 = W_24^tmp_7 & N_32;
W_23 = W_23^N_9 & N_31;
W_22 = W_22^M_1 & in[6];
W_21 = W_21^N_29 & tmp_1;
W_20 = W_20^N_27 & tmp_8;
W_19 = W_19^tmp_2 & tmp_10;
W_18 = W_18^N_3 & N_26;
W_17 = W_17^tmp_8 & N_25;
W_16 = W_16^N_18 & tmp_9;
W_15 = W_15^tmp_7 & N_24;
W_14 = W_14^M_31 & N_23;
W_13 = W_13^M_29 & N_22;
W_12 = W_12^N_19 & tmp_12;
W_11 = W_11^N_17 & tmp_1;
W_10 = W_10^N_16 & M_28;
W_8 = W_8^M_28 & N_14;
W_7 = W_7^tmp_7 & N_11;
W_6 = W_6^N_9 & N_10;
W_5 = W_5^M_1 & in[1] ;
W_4 = W_4^N_6 & tmp_1;
W_3 = W_3^N_4 & tmp_8;
W_2 = W_2^tmp_2 & in[2];
W_1 = W_1^N_3 & N_1;
tmp_9 = tmp_9 ^ in[2]  ;//  y[6
in[7] = in[7] ^ in[2] ; //  y[4
tmp_11 = tmp_11 ^ in[5];  //  y[10
in[1] = in[1] ^ in[2]  ; // y[8
in[5] = in[5] ^ in[3] ;  // y[9
tmp_12 = tmp_12 ^ in[1] ;  // y[11
in[2] = in[2] ^ in[6] ;   //y[3
tmp_10 = tmp_10 ^ in[0] ;   //y[7
tmp_10 = tmp_10 ^ in[6];
in[3] = in[3] ^ in[7] ;  // y[5
in[6] = in[6] ^ in[5] ;   //y[1
in[0] = in[0] ^ in[6] ;   //y[2
in[1] = in[1] ^ in[0];
in[0] = in[0] ^ in[4];
in[2] = in[2] ^ in[0];
tmp_9 = tmp_9 ^ in[3];
tmp_11 = tmp_11 ^ in[4];
in[4] = in[4] ^ in[6];    //y[0
in[3] = in[3] ^ in[1];
N_19 = N_19 ^ M_6;
N_3 = N_3 ^ M_31;  //    y[5=N3  -N_3
N_9 = N_9 ^ M_29;  //    y[7=N9  -N_9
M_7 = M_7 ^ M_25;  //    y[3=M32 -M_7
N_19 = N_19 ^ M_7; //    y[9=N19 -N_19
M_1 = M_1 ^ tmp_1;   //    y[6=N8  -M_1
N_18 = N_18 ^ M_7; //    y[8=N18 -N_18
M_25 = M_25 ^ M_1; //    y[2=M30 -M_25
M_7 = M_7 ^ M_1;
M_31 = M_31 ^ tmp_1; //    y[11=N21-M_31
tmp_2 = tmp_2 ^ M_7; //    y[4 =N2 -tmp_2
M_28 = M_28 ^ tmp_2;//    y[1 =M28-M_28
M_29 = M_29 ^ tmp_2;//    y[10=N20-M_29
tmp_1 = tmp_1 ^ M_25;  //    y[0 =M26-tmp_1
tmp_2 = tmp_2 ^ M_25;
tmp_8 = tmp_8 ^ M_31;
tmp_7 = tmp_7 ^ M_29;
in[2] = in[2] ^ in[5];
in[3] = in[3] ^ in[1];
in[1] = in[1] ^ in[4];
in[4] = in[4] ^ in[0];
U_17 = U_17 ^ in[7];    //y[17
U_14 = U_14 ^ in[6];
U_9 = U_9 ^ in[3];
U_8 = U_8 ^ in[4];//    y[3
U_16 = U_16 ^ in[1];
U_13 = U_13 ^ in[0];
in[0] = in[0] ^ in[6];//    y[0
U_10 = U_10 ^ in[4];
in[1] = in[1] ^ in[2];
U_11 = U_11 ^ in[1] ;//   y[10
U_16 = U_16 ^ in[0];//    y[16
in[4] = in[4] ^ in[0];//    y[1
in[2] = in[2] ^ in[0];//    y[4
in[1] = in[1] ^ in[3];//    y[9
in[6] = in[6] ^ in[5];//    y[2
U_15 = U_15 ^ in[4];//
in[3] = in[3] ^ in[7];//    y[6
U_12 = U_12 ^ in[7];//
U_10 = U_10 ^ in[6];//    y[8
in[7] = in[7] ^ in[2];//    y[5
U_9 = U_9 ^ in[2];//    y[7
in[5] = in[5] ^ in[3];//    y[14
U_13 = U_13 ^ in[3];//    y[12
U_12 = U_12 ^ in[1];//    y[11
U_14 = U_14 ^ in[3];//    y[13
U_15 = U_15 ^ in[5];//    y[15
N_41 = N_41 ^ M_7 & in[4];
N_40 = N_40 ^ M_1 & in[4];
N_39 = N_39 ^ M_7 & U_8;
N_38 = N_38 ^ M_1 & U_8;
N_37 = N_37 ^ M_7 & in[0];
N_36 = N_36 ^ M_1 & in[0];
N_35 = N_35 ^ M_1 & U_14;
//N_34 = N_34 ^ tmp_1 & U_14;
N_32 = N_32 ^ M_1 & in[5];
N_31 = N_31 ^ M_1 & in[6];
//N_30 = N_30 ^ tmp_2 & U_13;
N_29 = N_29 ^ M_7 & U_13;
N_27 = N_27 ^ M_7 & U_15;
N_26 = N_26 ^ M_7 & U_10;
N_25 = N_25 ^ M_7 & U_9;
N_24 = N_24 ^ M_1 & U_9;
N_23 = N_23 ^ M_7 & U_16;
N_22 = N_22 ^ M_1 & U_16;
N_17 = N_17 ^ M_7 & in[1];
N_16 = N_16 ^ M_1 & in[1];
N_14 = N_14 ^ M_1 & U_12;
//N_13 = N_13 ^ tmp_1 & U_12;
N_11 = N_11 ^ M_1 & in[3];
N_10 = N_10 ^ M_1 & U_11;
//N_7 = N_7 ^ tmp_2 & U_17;
N_6 = N_6 ^ M_7 & U_17;
N_4 = N_4 ^ M_7 & in[7];
N_1 =  N_1 ^ M_7 & in[2];
M_31 = M_31 ^ tmp_1 & tmp_3;
M_29 = M_29 ^ M_2 & tmp_2;
M_25 = M_25 ^ tmp_3 & M_2;
U_15 = U_15 ^ in[5];//    y[15
U_14 = U_14 ^ in[3];//    y[13
U_12 = U_12 ^ in[1];//    y[11
U_13 = U_13 ^ in[3];//    y[12
in[5] = in[5] ^ in[3];//    y[14
U_9 = U_9 ^ in[2];//    y[7
in[7] = in[7] ^ in[2];//    y[5
U_10 = U_10 ^ in[6];//    y[8
U_12 = U_12 ^ in[7];//
in[3] = in[3] ^ in[7];//    y[6
U_15 = U_15 ^ in[4];//
in[6] = in[6] ^ in[5];//    y[2
in[1] = in[1] ^ in[3];//    y[9
in[2] = in[2] ^ in[0];//    y[4
in[4] = in[4] ^ in[0];//    y[1
U_16 = U_16 ^ in[0];//    y[16
U_11 = U_11 ^ in[1];//   y[10
in[1] = in[1] ^ in[2];
U_10 = U_10 ^ in[4];
in[0] = in[0] ^ in[6];//    y[0
U_13 = U_13 ^ in[0];
U_16 = U_16 ^ in[1];
U_8 = U_8 ^ in[4];//    y[3
U_9 = U_9 ^ in[3];
U_14 = U_14 ^ in[6];
U_17 = U_17 ^ in[7];    //y[17
in[4] = in[4] ^ in[0];
in[1] = in[1] ^ in[4];
in[3] = in[3] ^ in[1];
in[2] = in[2] ^ in[5];
in[2] = in[2] ^ in[4];
in[3] = in[3] ^ in[6];
tmp_4 = tmp_4 ^ in[2];
in[6] = in[6] ^ in[1];//    y[5
in[3] = in[3] ^ in[0];//    y[6
in[2] = in[2] ^ in[5];
tmp_5 = tmp_5 ^ in[2];
in[2] = in[2] ^ in[6];//    y[3
tmp_4 = tmp_4 ^ in[6];//    y[2
tmp_6 = tmp_6 ^ in[3];
tmp_6 = tmp_6 ^ in[2];//    y[1
tmp_5 = tmp_5 ^ in[3];//    y[0
M_6 = M_6 ^ in[3];
M_1 = M_1 ^ in[6];
M_7 = M_7 ^ in[5];
tmp_2 = tmp_2 ^ in[2];
tmp_3 = tmp_3 ^ tmp_4;
tmp_1 = tmp_1 ^ tmp_6;
M_2 = M_2 ^ tmp_5;
tmp_5 = tmp_5 ^ in[3];//    y[0
tmp_6 = tmp_6 ^ in[2];//    y[1
tmp_6 = tmp_6 ^ in[3];
tmp_4 = tmp_4 ^ in[6];//    y[2
in[2] = in[2] ^ in[6];//    y[3
tmp_5 = tmp_5 ^ in[2];
in[2] = in[2] ^ in[5];
in[3] = in[3] ^ in[0];//    y[6
in[6] = in[6] ^ in[1];//    y[5
tmp_4 = tmp_4 ^ in[2];
in[3] = in[3] ^ in[6];
in[2] = in[2] ^ in[4];
in[2]  = in[2] ^ in[5];
in[3]  = in[3] ^ in[1];
in[1]  = in[1] ^ in[4];
in[4]  = in[4] ^ in[0];
U_17 = U_17 ^ in[7]; //    y[17
U_14 = U_14 ^ in[6];
U_9  = U_9 ^ in[3];
U_8  = U_8 ^ in[4];  //    y[3
U_16 = U_16 ^ in[1];
U_13 = U_13 ^ in[0];
in[0]  = in[0] ^ in[6];  //    y[0
U_10 = U_10 ^ in[4];
in[1]  = in[1] ^ in[2];
U_11 = U_11 ^ in[1]; //   y[10
U_16 = U_16 ^ in[0]; //    y[16
in[4]  = in[4] ^ in[0];  //    y[1
in[2]  = in[2] ^ in[0];  //    y[4
in[1]  = in[1] ^ in[3];  //    y[9
in[6]  = in[6] ^ in[5];  //    y[2
U_15 = U_15 ^ in[4]; //
in[3]  = in[3] ^ in[7];  //    y[6
U_12 = U_12 ^ in[7];
U_10 = U_10 ^ in[6]; //    y[8
in[7]  = in[7] ^ in[2];  //    y[5
U_9  = U_9 ^ in[2];  //    y[7
in[5]  = in[5] ^ in[3];  //    y[14
U_13 = U_13 ^ in[3]; //    y[12
U_12 = U_12 ^ in[1]; //    y[11
U_14 = U_14 ^ in[3]; //    y[13
U_15 = U_15 ^ in[5]; //    y[15
M_1 = M_1 ^ M_2;
tmp_1 = tmp_1 ^ M_1;
M_6 = M_6 ^ M_1;
M_7 = M_7 ^ M_6 ;
tmp_3 = tmp_3 ^ M_7;
tmp_2 = tmp_2 ^ M_6;
M_6 = M_6 ^ M_9;
M_1 = M_1 ^ M_4;
M_1 = M_1 ^ M_14;
M_2 = M_2 ^ M_1;
M_6 = M_6 ^ M_14;
M_2 = M_2 ^ M_12;
M_7 = M_7 ^ M_6;
M_6 = M_6 ^ M_11;
M_1 = M_1 ^ M_11;
M_7 = M_7 ^ M_12;
M_14 = M_14 ^ in[4] & U_9;
M_12 = M_12 ^ U_8 & U_16;
M_11 = M_11 ^ in[0] & in[1];
M_9 = M_9 ^ U_14 & U_12;
M_7 = M_7 ^ in[5] & in[3];
M_6 = M_6 ^ in[6] & U_11;
M_4 = M_4 ^ U_13 & U_17;
M_2 = M_2 ^ U_15 & in[7];
M_1 = M_1 ^ U_10 & in[2];
U_15 = U_15 ^ in[5];//    y[15
U_14 = U_14 ^ in[3];//    y[13
U_12 = U_12 ^ in[1];//    y[11
U_13 = U_13 ^ in[3];//    y[12
in[5] = in[5] ^ in[3];//    y[14
U_9 = U_9 ^ in[2];//    y[7
in[7] = in[7] ^ in[2];//    y[5
U_10 = U_10 ^ in[6];//    y[8
U_12 = U_12 ^ in[7];//
in[3] = in[3] ^ in[7];//    y[6
U_15 = U_15 ^ in[4];//
in[6] = in[6] ^ in[5];//    y[2
in[1] = in[1] ^ in[3];//    y[9
in[2] = in[2] ^ in[0];//    y[4
in[4] = in[4] ^ in[0];//    y[1
U_16 = U_16 ^ in[0];//    y[16
U_11 = U_11 ^ in[1];//   y[10
in[1] = in[1] ^ in[2];
U_10 = U_10 ^ in[4];
in[0] = in[0] ^ in[6];//    y[0
U_13 = U_13 ^ in[0];
U_16 = U_16 ^ in[1];
U_8 = U_8 ^ in[4];//    y[3
U_9 = U_9 ^ in[3];
U_14 = U_14 ^ in[6];
U_17 = U_17 ^ in[7];   //y[17
in[4] = in[4] ^ in[0];
in[1] = in[1] ^ in[4];
in[3] = in[3] ^ in[1];
in[2] = in[2] ^ in[5];
in[4] = in[4] ^ in[0];//    y[5]
in[0] = in[0] ^ in[3];//    y[3]
in[6] = in[6] ^ in[0];//    y[0]
in[2] = in[2] ^ in[0];//    y[4]
in[1] = in[1] ^ in[4];//    y[2]
in[3] = in[3] ^ in[1]; //   y[1]
in[6] = in[6] ^ in[3];
in[5] = in[5] ^ in[6];//    y[6]
in[2] = in[2] ^ in[1];
in[7] = in[7] ^ in[3];//    y[7]
in[0] = in[0] ^ in[5];

//check ancilla qubits are 0s or not
int sum = tmp_1 + tmp_2 + tmp_3 + tmp_4 +  tmp_5 +  tmp_6 + tmp_7 + tmp_8 + tmp_9 + tmp_10 + tmp_11 + tmp_12 


+ U_8 + U_9 + U_10 + U_11 + U_12 + U_13 + U_14 + U_15 + U_16 + U_17 
+ W_1 +  W_2 +  W_3 +  W_4 +  W_5 +  W_6 +  W_7 +  W_8 +  W_9 + W_10
+ W_11 + W_12 + W_13 + W_14 + W_15 + W_16 + W_17 + W_18 + W_19 +W_20 
+ W_21 + W_22 + W_23 + W_24 + W_25 + W_26 + W_27 + W_28 + W_29 +W_30
+ W_31 + W_32 + W_33 + W_34

+ tmp_13 + tmp_14 + tmp_15 + tmp_16 + tmp_17 + tmp_18 + tmp_19 + tmp_20 + tmp_21 + tmp_22
+ tmp_23 + tmp_24 + tmp_25 + tmp_26 + tmp_27 + tmp_28 + tmp_29 + tmp_30 + tmp_31 + tmp_32
+ tmp_33 + tmp_34 + tmp_35 + tmp_36 + tmp_37 + tmp_38 + tmp_39 + tmp_40 + tmp_41 + tmp_42 
+ tmp_43 + tmp_44 + tmp_45 + tmp_46 + tmp_47 + tmp_48 + tmp_49 + tmp_50 + tmp_51
+ M_1 +  M_2 +  M_4 +  M_6 +  M_7 +  M_9
+ M_11 + M_12 + M_14 + M_25 + M_28 + M_29 + M_31
+ N_1 +  N_3 +  N_4 +  N_5 +  N_6 +  N_7 +  N_9 +  N_10
+ N_11 + N_12 + N_13 + N_14 + N_16 + N_17 + N_18 + N_19
+ N_22 + N_23 + N_24 + N_25 + N_26 + N_27 + N_28 + N_29 + N_30
+ N_31+  N_32 + N_33 + N_34 + N_35 + N_36 + N_37 + N_38 + N_39 + N_40
+ N_41;
cout<<sum;

}



int main()
{
     for(int i = 0; i < 256; i++)
     {
          int in[8] = {0};
          int out[8] = {0};

          for(int j = 0; j < 8; j++)
          {
               in[j] = ((i>>(7 - j)) & 0x01);
          }

          ZUC_S_1_T_DEPTH3(in, out);

          

          int sum = out[2] * 128 + out[1] * 64 + out[5] * 32 + out[7] * 16 + out[0] * 8 + out[4] * 4 + out[3] * 2 + out[6];
     
          if ((i != 0) && ((i % 16 == 0)))
          {
               cout << endl;
          }
          if (sum == sbox[i])
          {
               cout << "0 ";
          }
          else if (sum != sbox[i])
          {
               cout << "1 ";
          }
     }
     cout << endl;
     return 0;
}


/*

# CNOt gates to copy/reset operands in QAND gates in the 2nd:
  41 variable should becopied: 41 CNOT gates to copy, 41 to reset;
# CNOt gates to copy/reset operands in QAND gates in the 3rd:
  22 variable should becopied: 22 CNOT gates to copy, 22 to reset;

In total:
8+8+144 qubits
T-depth = 3;
 CNOT : 571 + 41 + 41 + 22 + 22 = 697
 NOT  : 4
 QAND : 78
 QAND*: 78

1 QAND = 3 1-qubit Clifford gates 
       + 4 T gates
       + 8 CNOT gates
1 QAND_C = 4 1-qubit Clifford gates
         + 1 CNOT gate
         + 1 Measure


Totally,
 Measure : 78;
 1-qubit : 4 + 78*(3+4) = 550;
 CNOT    : 697 + 78*(8+1) = 1399;
 T       : 78 * 4 = 312

*/